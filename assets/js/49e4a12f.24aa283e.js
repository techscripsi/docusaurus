"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2647],{29870:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>b,contentTitle:()=>y,default:()=>w,frontMatter:()=>f,metadata:()=>a,toc:()=>g});const a=JSON.parse('{"id":"api/10-init","title":"Initiate","description":"Use this method to initiate a new cart. To do this, generate `cartId` (cart identifier) on your side and pass it to OmniCart along with other parameters.","source":"@site/docs/api/10-init.api.mdx","sourceDirName":"api","slug":"/api/10-init","permalink":"/docusaurus/docs/api/10-init","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"id":"10-init","title":"Initiate","description":"Use this method to initiate a new cart. To do this, generate `cartId` (cart identifier) on your side and pass it to OmniCart along with other parameters.","sidebar_label":"Initiate","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/api/omnicart-api","custom_edit_url":null},"sidebar":"api","previous":{"title":"Introduction","permalink":"/docusaurus/docs/api/omnicart-api"},"next":{"title":"Retrieve status","permalink":"/docusaurus/docs/api/15-status"}}');var s=i(74848),n=i(28453),r=i(53746),o=i.n(r),d=i(56518),p=i.n(d),l=i(99972),c=i.n(l),m=i(25342),u=i.n(m),h=(i(44215),i(82223),i(24861));const f={id:"10-init",title:"Initiate",description:"Use this method to initiate a new cart. To do this, generate `cartId` (cart identifier) on your side and pass it to OmniCart along with other parameters.",sidebar_label:"Initiate",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/api/omnicart-api",custom_edit_url:null},y=void 0,b={},g=[];function v(e){const t={code:"code",p:"p",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Initiate"}),"\n",(0,s.jsx)(o(),{method:"post",path:"/init",context:"endpoint"}),"\n",(0,s.jsxs)(t.p,{children:["Use this method to initiate a new cart. To do this, generate ",(0,s.jsx)(t.code,{children:"cartId"})," (cart identifier) on your side and pass it to OmniCart along with other parameters."]}),"\n",(0,s.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(p(),{parameters:[]}),"\n",(0,s.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{type:"object",required:["cartId"],properties:{cartId:{type:"string",title:" ",example:"6f891edb-1e1f-48bb-b042-2cb790a0f402",minimum:9,maximum:36,description:"`cartId` is a unique identifier of your payment order that can contain one or more products (items). Generate `cartId` on your side and pass it to OmniCart on order creation.\n"},customerId:{type:"string",title:" ",example:"8d7d8181-b4bf-49bb-b732-d498d15dc5cc",description:"Optional customer identifier that links them to the passed `cartId`. It is required only if you want to set timers for your items.\n"},currency:{type:"string",title:" ",example:"EUR",description:"[ISO 4217](https://www.iban.com/currency-codes) alphabetic currency code."},scope:{description:"`scope` lets you define sets of settings that you can apply to the whole cart or items marked with specific tags. Child settings override parent ones. That means that if you define both cart and tag settings, the tag settings will override cart settins.\n",type:"object",properties:{cart:{description:"Payment and timer settings applied to the whole cart. If you define tag settings, they will override the cart settings for items marked with the defined tags.\n",type:"object",title:" ",properties:{amountMode:{type:"string",title:" ",enum:["declared","calculated"],example:"calculated",description:"This parameter defines what amoutn will be used for payment. Available values:\n* `declared` - for payment will be used the amount specified in the `amount` field of the item. Other fields (`quantity`, `amountModifier`) will be stored by OmniCart but will not affect the price. That is, in this case, the price is calculated on your side and passed to OmniCart as is.\n* `calculated` - the amount in the `amount` field is provided per item. If you pass the `quantity` and/or `amountModifier` fields along with the `amount` value, OmnicCart will calculate the final price based on the latter settings.\n"},amountModifier:{type:"number",title:" ",format:"float",minimum:.01,example:.7,description:"The `amount` parameter is multiplied by this value. You can use it to calculate discounts."},capture:{description:"Whether an item affected by this setting is a two phase purchase. If enabled, after a payment of the item is approved, it is put on hold on the customer's account and must be captured for an actual transaction to take place.\n",type:"boolean",title:" "},captureSettings:{description:"Defines capture settings. By default, an approved payment auto expires after 2 days without manual action.",type:"object",title:" ",properties:{autoAction:{description:"Action that is taken after the time set in the `value` parameter elsapses.",type:"string",title:" ",enum:["cancel","complete"],example:"complete"},value:{type:"integer",title:" ",description:"Number of seconds after which the action set in the `autoAction` parameter is taken.",example:172800}}},enableTimer:{description:"Enable a timer is on, OmniCart will not register another purchase with the `itemId` for which the timer was enabled.",type:"boolean",title:" "},timer:{desccription:"Timer settings.",type:"object",title:" ",properties:{triggerEvent:{description:"Item payment status that triggers the timer. You can also select to start the timer manually.\n",enum:["initiated","rejected","approved","canceled","captured","finalized","refunded","manual"],type:"string",title:" "},value:{type:"integer",title:" ",description:"Amount of seconds after which the timer elapses."}}}}},tags:{description:"Payment and timer settings for item tags. Each object in this array represents a tag.\n",type:"array",title:" ",items:{type:"object",properties:{tagName:{type:"object",title:" ",description:"Replace `tagName` with a tag name defined in your merchant dashboard.\n",properties:{paymentFilter:{description:"Payment and timer settings applied to the tag specified as object name. Tag seettings override cart settings.\n",type:"object",title:" ",properties:{amountMode:{type:"string",title:" ",enum:["declared","calculated"],example:"calculated",description:"This parameter defines what amoutn will be used for payment. Available values:\n* `declared` - for payment will be used the amount specified in the `amount` field of the item. Other fields (`quantity`, `amountModifier`) will be stored by OmniCart but will not affect the price. That is, in this case, the price is calculated on your side and passed to OmniCart as is.\n* `calculated` - the amount in the `amount` field is provided per item. If you pass the `quantity` and/or `amountModifier` fields along with the `amount` value, OmnicCart will calculate the final price based on the latter settings.\n"},amountModifier:{type:"number",title:" ",format:"float",minimum:.01,example:.7,description:"The `amount` parameter is multiplied by this value. You can use it to calculate discounts."},capture:{description:"Whether an item affected by this setting is a two phase purchase. If enabled, after a payment of the item is approved, it is put on hold on the customer's account and must be captured for an actual transaction to take place.\n",type:"boolean",title:" "},captureSettings:{description:"Defines capture settings. By default, an approved payment auto expires after 2 days without manual action.",type:"object",title:" ",properties:{autoAction:{description:"Action that is taken after the time set in the `value` parameter elsapses.",type:"string",title:" ",enum:["cancel","complete"],example:"complete"},value:{type:"integer",title:" ",description:"Number of seconds after which the action set in the `autoAction` parameter is taken.",example:172800}}},enableTimer:{description:"Enable a timer is on, OmniCart will not register another purchase with the `itemId` for which the timer was enabled.",type:"boolean",title:" "},timer:{desccription:"Timer settings.",type:"object",title:" ",properties:{triggerEvent:{description:"Item payment status that triggers the timer. You can also select to start the timer manually.\n",enum:["initiated","rejected","approved","canceled","captured","finalized","refunded","manual"],type:"string",title:" "},value:{type:"integer",title:" ",description:"Amount of seconds after which the timer elapses."}}}}}}}}}}},title:"object_scope"},cart:{description:"Cart contents.",type:"array",items:{type:"object",required:["itemId"],properties:{itemId:{type:"object",required:["amount"],properties:{tag:{type:"string",title:" ",example:"groceries",description:"Specify an optional tag. The tag must be defined in your merchant dashboard. One tag per cart item is allowed.\n"},amount:{type:"integer",title:" ",example:9999,description:"Item amount in minimum currecy units.\n`amountMode: declared` - the `amount` value passed to OmniCart is the total amount for this `itemId` in the cart. The `quantity` and `amountModifier` values are stored in OminCart but ignored for final item price calculation.\n`amountMode: calculated` - the `amount` value is specified per item. The total amount is calculated on the OmniCart side based on the `quantity` and `amountModifier` values.\n"},quantity:{type:"number",title:" ",format:"float",minimum:.01,description:"primitive_quantity"},paymentFilter:{type:"object",title:" ",description:"Set of payment and timer settings.\n",properties:{amountMode:{type:"string",title:" ",enum:["declared","calculated"],example:"calculated",description:"This parameter defines what amoutn will be used for payment. Available values:\n* `declared` - for payment will be used the amount specified in the `amount` field of the item. Other fields (`quantity`, `amountModifier`) will be stored by OmniCart but will not affect the price. That is, in this case, the price is calculated on your side and passed to OmniCart as is.\n* `calculated` - the amount in the `amount` field is provided per item. If you pass the `quantity` and/or `amountModifier` fields along with the `amount` value, OmnicCart will calculate the final price based on the latter settings.\n"},amountModifier:{type:"number",title:" ",format:"float",minimum:.01,example:.7,description:"The `amount` parameter is multiplied by this value. You can use it to calculate discounts."},capture:{description:"Whether an item affected by this setting is a two phase purchase. If enabled, after a payment of the item is approved, it is put on hold on the customer's account and must be captured for an actual transaction to take place.\n",type:"boolean",title:" "},captureSettings:{description:"Defines capture settings. By default, an approved payment auto expires after 2 days without manual action.",type:"object",title:" ",properties:{autoAction:{description:"Action that is taken after the time set in the `value` parameter elsapses.",type:"string",title:" ",enum:["cancel","complete"],example:"complete"},value:{type:"integer",title:" ",description:"Number of seconds after which the action set in the `autoAction` parameter is taken.",example:172800}}},enableTimer:{description:"Enable a timer is on, OmniCart will not register another purchase with the `itemId` for which the timer was enabled.",type:"boolean",title:" "},timer:{desccription:"Timer settings.",type:"object",title:" ",properties:{triggerEvent:{description:"Item payment status that triggers the timer. You can also select to start the timer manually.\n",enum:["initiated","rejected","approved","canceled","captured","finalized","refunded","manual"],type:"string",title:" "},value:{type:"integer",title:" ",description:"Amount of seconds after which the timer elapses."}}}}}},description:"Replace `itemId` with an actual item ID available in your merchant dashboard.",title:"object_item_init_req"}}},title:"block_cart"}}}}}}}),"\n",(0,s.jsx)(u(),{id:void 0,label:void 0,responses:{201:{description:"Cart created",content:{"application/json":{schema:{type:"object",required:["cartId","code","message","timestamp"],properties:{cartId:{type:"string",title:" ",example:"6f891edb-1e1f-48bb-b042-2cb790a0f402",minimum:9,maximum:36,desciption:"Cart identifier generated on your side and passed to OmniCart on card registration.\n"},code:{type:"string",title:" ",description:"Response code (see also [Response codes and messages](/docusaurus/docs/integration/error-codes)).",example:"success"},message:{example:"Cart successfully created.",type:"string",description:'Response message "(see also [Response codes and messages](/docusaurus/docs/integration/error-codes))."',title:" "},timestamp:{type:"string",title:" ",format:"date-time",description:"Date and time the request was received by the server.",example:"2025-04-23T18:25:43.511Z"}}}}}},400:{description:"Bad Request",content:{"application/json":{schema:{type:"object",required:["data","code","message","timestamp"],properties:{data:{type:"object"},code:{type:"string",title:" ",example:"invalid_value"},message:{example:"Invalid cartId value",type:"string",description:'Response message "(see also [Response codes and messages](/docusaurus/docs/integration/error-codes))."',title:" "},timestamp:{type:"string",title:" ",format:"date-time",description:"Date and time the request was received by the server.",example:"2025-04-23T18:25:43.511Z"}}}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{type:"object",required:["code","message","timestamp"],properties:{code:{type:"number",title:" ",description:'Error code "(see also [Response codes and messages](/docusaurus/docs/integration/error-codes))."\n',example:"auth_error"},message:{type:"string",title:" ",description:'Error message "(see also [Response codes and messages](/docusaurus/docs/integration/error-codes))."\n',example:"Authentication error"},timestamp:{type:"string",title:" ",format:"date-time",description:"Date and time the request was received by the server.",example:"2025-04-23T18:25:43.511Z"}}}}}},404:{description:"Not Found",content:{"application/json":{schema:{type:"object",required:["data","code","message","timestamp"],properties:{data:{type:"object"},code:{type:"number"},message:{type:"string"},timestamp:{type:"string",title:" ",format:"date-time",description:"Date and time the request was received by the server.",example:"2025-04-23T18:25:43.511Z"}}}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{type:"object",required:["data","code","message","timestamp"],properties:{data:{type:"object"},code:{type:"number"},message:{type:"string"},timestamp:{type:"string",title:" ",format:"date-time",description:"Date and time the request was received by the server.",example:"2025-04-23T18:25:43.511Z"}}}}}}}})]})}function w(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(v,{...e})}):v(e)}}}]);